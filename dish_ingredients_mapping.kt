/**
 * Dish Ingredients Mapping for Nutry App
 * This file shows the ingredient composition for each Bulgarian dish
 * before adding them to the database
 */

data class DishIngredientMapping(
    val dishName: String,
    val emoji: String,
    val ingredients: List<String>
)

val bulgari–∞–ΩDishIngredients = listOf(
    DishIngredientMapping(
        dishName = "–ü—ä—Ä–∂–µ–Ω–∏ –ö–∞—Ä—Ç–æ—Ñ–∏",
        emoji = "üçü",
        ingredients = listOf("–ö–∞—Ä—Ç–æ—Ñ–∏", "–û–ª–∏–æ –∑–∞ –ø—ä—Ä–∂–µ–Ω–µ", "–°–æ–ª")
    ),
    
    DishIngredientMapping(
        dishName = "–ß—É—à–∫–∏ –ë—é—Ä–µ–∫",
        emoji = "ü•ô",
        ingredients = listOf("–ß—É—à–∫–∞ (—á–µ—Ä–≤–µ–Ω–∞, –∑–µ–ª–µ–Ω–∞, –ª—é—Ç–∞)", "–°–∏—Ä–µ–Ω–µ", "–Ø–π—Ü–∞", "–ë—Ä–∞—à–Ω–æ", "–û–ª–∏–æ –∑–∞ –ø—ä—Ä–∂–µ–Ω–µ")
    ),
    
    DishIngredientMapping(
        dishName = "–ú–∏—à –ú–∞—à",
        emoji = "üç≥",
        ingredients = listOf("–Ø–π—Ü–∞", "–°–∏—Ä–µ–Ω–µ", "–î–æ–º–∞—Ç", "–û–ª–∏–æ –∑–∞ –ø—ä—Ä–∂–µ–Ω–µ", "–°–æ–ª", "–ü–∏–ø–µ—Ä")
    ),
    
    DishIngredientMapping(
        dishName = "–¢–∞—Ä–∞—Ç–æ—Ä",
        emoji = "ü•í",
        ingredients = listOf("–ö—Ä–∞—Å—Ç–∞–≤–∏—Ü–∞", "–ö–∏—Å–µ–ª–æ –º–ª—è–∫–æ", "–û—Ä–µ—Ö–∏", "–ß–µ—Å—ä–Ω", "–ö–æ–ø—ä—Ä", "–û–ª–∏–æ", "–°–æ–ª")
    ),
    
    DishIngredientMapping(
        dishName = "–¢–∏–∫–≤–∏—á–∫–∏",
        emoji = "ü•í",
        ingredients = listOf("–¢–∏–∫–≤–∏—á–∫–∏", "–Ø–π—Ü–∞", "–°–∏—Ä–µ–Ω–µ", "–ö–æ–ø—ä—Ä", "–û–ª–∏–æ –∑–∞ –ø—ä—Ä–∂–µ–Ω–µ", "–°–æ–ª")
    ),
    
    DishIngredientMapping(
        dishName = "–ì—Ä–∞—Ö–æ–≤–∞ –º–∞–Ω–¥–∂–∞",
        emoji = "üç≤",
        ingredients = listOf("–ì—Ä–∞—Ö", "–ú–æ—Ä–∫–æ–≤–∏", "–õ—É–∫ (–∂—ä–ª—Ç, —á–µ—Ä–≤–µ–Ω, –∑–µ–ª–µ–Ω)", "–î–æ–º–∞—Ç", "–û–ª–∏–æ", "–°–æ–ª", "–ü–∏–ø–µ—Ä")
    ),
    
    DishIngredientMapping(
        dishName = "–ó–µ–ª–µ–Ω –±–æ–±",
        emoji = "ü•ó",
        ingredients = listOf("–ó–µ–ª–µ–Ω —Ñ–∞—Å—É–ª", "–õ—É–∫ (–∂—ä–ª—Ç, —á–µ—Ä–≤–µ–Ω, –∑–µ–ª–µ–Ω)", "–ú–æ—Ä–∫–æ–≤–∏", "–î–æ–º–∞—Ç", "–û–ª–∏–æ", "–°–æ–ª", "–ü–∏–ø–µ—Ä")
    ),
    
    DishIngredientMapping(
        dishName = "–°–ø–∞–Ω–∞–∫",
        emoji = "ü•¨",
        ingredients = listOf("–°–ø–∞–Ω–∞–∫", "–Ø–π—Ü–∞", "–°–∏—Ä–µ–Ω–µ", "–õ—É–∫ (–∂—ä–ª—Ç, —á–µ—Ä–≤–µ–Ω, –∑–µ–ª–µ–Ω)", "–û–ª–∏–æ", "–°–æ–ª")
    ),
    
    DishIngredientMapping(
        dishName = "–ü–ò–¶–ê",
        emoji = "üçï",
        ingredients = listOf("–ë—Ä–∞—à–Ω–æ", "–ö–∞—à–∫–∞–≤–∞–ª", "–î–æ–º–∞—Ç", "–û–ª–∏–æ", "–°–æ–ª", "–ú–∞—è")
    ),
    
    DishIngredientMapping(
        dishName = "–ö—É—Å-–∫—É—Å",
        emoji = "üçö",
        ingredients = listOf("–ö—É—Å-–∫—É—Å", "–ó–µ–ª–µ–Ω—á—É—Ü–∏ (–º–∏–∫—Å)", "–û–ª–∏–æ", "–°–æ–ª", "–ü–∏–ø–µ—Ä")
    ),
    
    DishIngredientMapping(
        dishName = "–ú–∞–∫–∞—Ä–æ–Ω–∏",
        emoji = "üçù",
        ingredients = listOf("–ú–∞–∫–∞—Ä–æ–Ω–∏", "–ö–∞—à–∫–∞–≤–∞–ª", "–ú–∞—Å–ª–æ", "–°–æ–ª")
    ),
    
    DishIngredientMapping(
        dishName = "–°–ø–∞–≥–µ—Ç–∏",
        emoji = "üçù",
        ingredients = listOf("–°–ø–∞–≥–µ—Ç–∏", "–î–æ–º–∞—Ç", "–ö–∞—à–∫–∞–≤–∞–ª", "–û–ª–∏–æ", "–ß–µ—Å—ä–Ω", "–°–æ–ª")
    ),
    
    DishIngredientMapping(
        dishName = "–û–≤–µ—Å —Å –º–ª—è–∫–æ",
        emoji = "ü•£",
        ingredients = listOf("–û–≤–µ—Å", "–ú–ª—è–∫–æ", "–ó–∞—Ö–∞—Ä", "–ú–µ–¥")
    ),
    
    DishIngredientMapping(
        dishName = "–ú—é—Å–ª–∏",
        emoji = "ü•£",
        ingredients = listOf("–ú—é—Å–ª–∏", "–ú–ª—è–∫–æ", "–ü–ª–æ–¥–æ–≤–µ (–º–∏–∫—Å)", "–ú–µ–¥")
    ),
    
    DishIngredientMapping(
        dishName = "–ü–∞–ª–∞—á–∏–Ω–∫–∏",
        emoji = "ü•û",
        ingredients = listOf("–ë—Ä–∞—à–Ω–æ", "–ú–ª—è–∫–æ", "–Ø–π—Ü–∞", "–ó–∞—Ö–∞—Ä", "–ú–∞—Å–ª–æ", "–°–æ–ª")
    ),
    
    DishIngredientMapping(
        dishName = "–ë–æ–±",
        emoji = "ü´ò",
        ingredients = listOf("–ë–æ–±", "–õ—É–∫ (–∂—ä–ª—Ç, —á–µ—Ä–≤–µ–Ω, –∑–µ–ª–µ–Ω)", "–ú–æ—Ä–∫–æ–≤–∏", "–î–æ–º–∞—Ç", "–û–ª–∏–æ", "–°–æ–ª", "–ü–∏–ø–µ—Ä")
    ),
    
    DishIngredientMapping(
        dishName = "–õ–µ—â–∞",
        emoji = "ü´ò",
        ingredients = listOf("–õ–µ—â–∞", "–õ—É–∫ (–∂—ä–ª—Ç, —á–µ—Ä–≤–µ–Ω, –∑–µ–ª–µ–Ω)", "–ú–æ—Ä–∫–æ–≤–∏", "–û–ª–∏–æ", "–°–æ–ª", "–ü–∏–ø–µ—Ä")
    ),
    
    DishIngredientMapping(
        dishName = "–ü—ä—Ä–∂–µ–Ω–∏ —Ñ–∏–ª–∏–π–∫–∏",
        emoji = "üçû",
        ingredients = listOf("–•–ª—è–±", "–ú–ª—è–∫–æ", "–Ø–π—Ü–∞", "–û–ª–∏–æ –∑–∞ –ø—ä—Ä–∂–µ–Ω–µ", "–°–æ–ª")
    ),
    
    DishIngredientMapping(
        dishName = "–ë–∞–Ω–∏—Ü–∞",
        emoji = "ü•ê",
        ingredients = listOf("–ö–æ—Ä–∏ –∑–∞ –±–∞–Ω–∏—Ü–∞", "–°–∏—Ä–µ–Ω–µ", "–Ø–π—Ü–∞", "–ú–ª—è–∫–æ", "–û–ª–∏–æ", "–°–æ–ª")
    ),
    
    DishIngredientMapping(
        dishName = "–ë—É—Ç–µ—Ä–∫–∏",
        emoji = "ü•™",
        ingredients = listOf("–•–ª—è–±", "–ö–∞—à–∫–∞–≤–∞–ª", "–®—É–Ω–∫–∞", "–î–æ–º–∞—Ç", "–ö—Ä–∞—Å—Ç–∞–≤–∏—Ü–∞", "–ú–∞—Å–ª–æ")
    ),
    
    DishIngredientMapping(
        dishName = "–ì—é–∑–ª–µ–º–µ",
        emoji = "ü•ô",
        ingredients = listOf("–ë—Ä–∞—à–Ω–æ", "–°–∏—Ä–µ–Ω–µ", "–°–ø–∞–Ω–∞–∫", "–û–ª–∏–æ", "–°–æ–ª", "–í–æ–¥–∞")
    ),
    
    DishIngredientMapping(
        dishName = "–ó–∞–ø–µ–∫–∞–Ω–∫–∞ —Å –∫–∞—Ä—Ç–æ—Ñ–∏ –∏ –∑–µ–ª–µ–Ω—á—É—Ü–∏",
        emoji = "üç≤",
        ingredients = listOf("–ö–∞—Ä—Ç–æ—Ñ–∏", "–¢–∏–∫–≤–∏—á–∫–∏", "–ß—É—à–∫–∞ (—á–µ—Ä–≤–µ–Ω–∞, –∑–µ–ª–µ–Ω–∞, –ª—é—Ç–∞)", "–ö–∞—à–∫–∞–≤–∞–ª", "–Ø–π—Ü–∞", "–ú–ª—è–∫–æ", "–û–ª–∏–æ", "–°–æ–ª")
    ),
    
    DishIngredientMapping(
        dishName = "–ì—é–≤–µ—á–µ —Å –∫–∞—à–∫–∞–≤–∞–ª –∏ —Å–æ—Å –±–∞—Ä–±–µ–∫—é",
        emoji = "üç≤",
        ingredients = listOf("–ö–∞—Ä—Ç–æ—Ñ–∏", "–ö–∞—à–∫–∞–≤–∞–ª", "–õ—É–∫ (–∂—ä–ª—Ç, —á–µ—Ä–≤–µ–Ω, –∑–µ–ª–µ–Ω)", "–ß—É—à–∫–∞ (—á–µ—Ä–≤–µ–Ω–∞, –∑–µ–ª–µ–Ω–∞, –ª—é—Ç–∞)", "–û–ª–∏–æ", "–°–æ–ª", "–ü–∏–ø–µ—Ä")
    ),
    
    DishIngredientMapping(
        dishName = "–ö—Ä–µ–º —Å—É–ø–∞ —Å –∫—Ä–æ—Ç–æ–Ω–∏",
        emoji = "üç≤",
        ingredients = listOf("–ö–∞—Ä—Ç–æ—Ñ–∏", "–ú–æ—Ä–∫–æ–≤–∏", "–õ—É–∫ (–∂—ä–ª—Ç, —á–µ—Ä–≤–µ–Ω, –∑–µ–ª–µ–Ω)", "–°–º–µ—Ç–∞–Ω–∞", "–•–ª—è–±", "–ú–∞—Å–ª–æ", "–°–æ–ª", "–ü–∏–ø–µ—Ä")
    ),
    
    DishIngredientMapping(
        dishName = "–ó–µ–ª–µ–Ω—á—É–∫–æ–≤–æ –∫—ä—Ä–∏ —Å –∫–∞—Ä—Ç–æ—Ñ–∏ –∏ –≥—Ä–∞—Ö",
        emoji = "üçõ",
        ingredients = listOf("–ö–∞—Ä—Ç–æ—Ñ–∏", "–ì—Ä–∞—Ö", "–õ—É–∫ (–∂—ä–ª—Ç, —á–µ—Ä–≤–µ–Ω, –∑–µ–ª–µ–Ω)", "–ú–æ—Ä–∫–æ–≤–∏", "–ö—ä—Ä–∏", "–ö–æ–∫–æ—Å–æ–≤–æ –º–ª—è–∫–æ", "–û–ª–∏–æ", "–°–æ–ª")
    ),
    
    DishIngredientMapping(
        dishName = "–ü–µ—á–µ–Ω–∏ –∑–µ–ª–µ–Ω—á—É—Ü–∏ —Å –∫–∞—à–∫–∞–≤–∞–ª",
        emoji = "ü•ó",
        ingredients = listOf("–¢–∏–∫–≤–∏—á–∫–∏", "–ß—É—à–∫–∞ (—á–µ—Ä–≤–µ–Ω–∞, –∑–µ–ª–µ–Ω–∞, –ª—é—Ç–∞)", "–ü–∞—Ç–ª–∞–¥–∂–∞–Ω", "–ö–∞—à–∫–∞–≤–∞–ª", "–û–ª–∏–æ", "–°–æ–ª", "–ü–∏–ø–µ—Ä")
    ),
    
    DishIngredientMapping(
        dishName = "–¢–∏–∫–≤–µ–Ω–∏–∫",
        emoji = "ü•ß",
        ingredients = listOf("–¢–∏–∫–≤–∞", "–ë—Ä–∞—à–Ω–æ", "–Ø–π—Ü–∞", "–ó–∞—Ö–∞—Ä", "–û–ª–∏–æ", "–°–æ–ª", "–ö–∞–Ω–µ–ª–∞")
    ),
    
    DishIngredientMapping(
        dishName = "–°–º–µ—Ç–∞–Ω–∞",
        emoji = "ü•õ",
        ingredients = listOf("–°–º–µ—Ç–∞–Ω–∞")
    ),
    
    DishIngredientMapping(
        dishName = "–®–æ–∫–æ–ª–∞–¥",
        emoji = "üç´",
        ingredients = listOf("–®–æ–∫–æ–ª–∞–¥")
    ),
    
    DishIngredientMapping(
        dishName = "–ö–∞–∫–∞–æ",
        emoji = "‚òï",
        ingredients = listOf("–ö–∞–∫–∞–æ", "–ú–ª—è–∫–æ", "–ó–∞—Ö–∞—Ä")
    )
)

// Display function to show dish ingredients before database insertion
fun displayDishIngredients() {
    println("=".repeat(80))
    println("BULGARIAN DISHES AND THEIR INGREDIENTS")
    println("=".repeat(80))
    
    bulgari–∞–ΩDishIngredients.forEachIndexed { index, dish ->
        println("${index + 1}. ${dish.emoji} ${dish.dishName}")
        println("   Ingredients: ${dish.ingredients.joinToString(", ")}")
        println("   Total ingredients: ${dish.ingredients.size}")
        println()
    }
    
    println("=".repeat(80))
    println("SUMMARY:")
    println("Total dishes: ${bulgari–∞–ΩDishIngredients.size}")
    println("Average ingredients per dish: ${bulgari–∞–ΩDishIngredients.map { it.ingredients.size }.average().toInt()}")
    println("Most complex dish: ${bulgari–∞–ΩDishIngredients.maxByOrNull { it.ingredients.size }?.dishName} (${bulgari–∞–ΩDishIngredients.maxByOrNull { it.ingredients.size }?.ingredients?.size} ingredients)")
    println("Simplest dish: ${bulgari–∞–ΩDishIngredients.minByOrNull { it.ingredients.size }?.dishName} (${bulgari–∞–ΩDishIngredients.minByOrNull { it.ingredients.size }?.ingredients?.size} ingredients)")
    println("=".repeat(80))
}

// Function to get unique ingredients across all dishes
fun getUniqueIngredients(): Set<String> {
    return bulgari–∞–ΩDishIngredients.flatMap { it.ingredients }.toSet()
}

// Function to check for missing ingredients in database
fun checkMissingIngredients(databaseIngredients: List<String>): List<String> {
    val dishIngredients = getUniqueIngredients()
    return dishIngredients.filter { it !in databaseIngredients }
}